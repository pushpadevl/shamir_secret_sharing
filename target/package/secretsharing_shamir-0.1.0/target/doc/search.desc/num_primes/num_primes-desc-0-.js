searchState.loadedDescShard("num_primes", 0, "A big unsigned integer type.\nPrime Factorization\nGenerator\nA trait for sampling random big integers.\nPrime Verification\nAssign a value to a <code>BigUint</code>.\nReturns the ceil value of the average of <code>self</code> and <code>other</code>.\nReturns the floor value of the average of <code>self</code> and <code>other</code>.\nDetermines the fewest bits necessary to express the <code>BigUint</code>…\nReturns the truncated principal cube root of <code>self</code> – see …\nDeprecated, use <code>is_multiple_of</code> instead.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates and initializes a <code>BigUint</code>.\nCreates and initializes a <code>BigUint</code>.\nCreates and initializes a <code>BigUint</code>. Each u8 of the input …\nCreates and initializes a <code>BigUint</code>. Each u8 of the input …\nCreates and initializes a <code>BigUint</code>.\nCreates and initializes a <code>BigUint</code>.\nCalculates the Greatest Common Divisor (GCD) of the number …\nGenerate a random BigInt of the given bit size.\nGenerate a random <code>BigInt</code> within the given range. The lower …\nGenerate a random <code>BigUint</code> of the given bit size.\nGenerate a random <code>BigUint</code> less than the given bound. Fails …\nGenerate a random <code>BigUint</code> within the given range. The lower\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the number is divisible by <code>2</code>.\nReturns <code>true</code> if the number is a multiple of <code>other</code>.\nReturns <code>true</code> if the number is not divisible by <code>2</code>.\nVery Smooth Number\nCalculates the Lowest Common Multiple (LCM) of the number …\nReturns <code>(self ^ exponent) % modulus</code>.\nCreates and initializes a <code>BigUint</code>.\nGenerate Large Composite Numbers\nGenerate Prime Number\nGenerate Large Unsigned Integer\nReturns the truncated principal <code>n</code>th root of <code>self</code> – see …\nCreates and initializes a <code>BigUint</code>. The input slice must …\nPrime Factorization\nGenerate Safe Primes\nReturns the truncated principal square root of <code>self</code> – …\nReturns the byte representation of the <code>BigUint</code> in …\nReturns the byte representation of the <code>BigUint</code> in …\nReturns the integer in the requested base in big-endian …\nReturns the integer in the requested base in little-endian …\nReturns the integer formatted as a string in the given …\nReturns the <code>u32</code> digits representation of the <code>BigUint</code> …")